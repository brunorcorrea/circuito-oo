@startuml
abstract class main.Funcionario {
    -nome: String;
    -cadastroPessoaFisica: String;
    -dataNascimento: String
    -numDependentes: Integer
    -salario: double
    {abstract} +double: getBonusAnual()
    {abstract} +void: saudacao()
}

interface main.Autenticavel {
    {abstract} +boolean: autentica(String senha)
}

class main.AssistenteRH extends main.Funcionario implements main.Autenticavel {
    -senha: String
    -id: Integer
    +double: getBonusAnual() <<override>>
    +void: saudacao() <<override>>
    +boolean: autentica(String senha) <<override>>
}

class main.AuditorRH implements main.Autenticavel {
    -id: Integer
    -senha: String
    +double: getBonusAnual() <<override>>
    +void: saudacao() <<override>>
    +boolean: autentica(String senha) <<override>>
}

/'class PessoaProgramadora extends main.Funcionario {
    -crp: Integer
    +double: getBonusAnual() <<override>>
    +void: saudacao() <<override>>
}'/

class main.DesenvolvedorFrontEnd extends main.Funcionario {
    -crpw  : Integer
    +double: getBonusAnual() <<override>>
    +void: saudacao() <<override>>
}

class main.CientistaDados extends main.Funcionario {
    -crcd: Integer
    +double: getBonusAnual() <<override>>
    +void: saudacao() <<override>>
}

class main.GerenteTI extends main.Funcionario implements main.Autenticavel {

    -nummFuncionarios: Integer
    -ramal: String
    +boolean: autentica(String senha) <<override>>
    +double: getBonusAnual() <<override>>
    +void: saudacao() <<override>>
}

class RelatorioAutoAvaliacao {
}

RelatorioAutoAvaliacao -- main.Autenticavel

/'class main.RelatorioGastos {
    -totalSalario: double
    -totalBonus: double
    +void:adicionaValores(main.Funcionario funcionario)
}

main.RelatorioGastos ..> main.Funcionario'/
@enduml